name: Auto Build & Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy environment'
        required: true
        default: 'preview'
        type: choice
        options:
        - preview
        - production

env:
  NODE_VERSION: '22.14.0'
  JAVA_VERSION: '17'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
        cache: 'maven'
        
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install dependencies
      run: |
        npm ci
        ./mvnw dependency:resolve
        
    - name: Build with cloud profile
      run: |
        export NODE_ENV=production
        export SERVER_API_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/
        ./mvnw clean compile -Pcloud
        
    - name: Run tests
      run: |
        npm run test-ci
        ./mvnw test -Pcloud
        
    - name: Build JAR
      run: ./mvnw package -DskipTests -Pcloud
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: warehouse-app
        path: |
          target/*.jar
          target/classes/static/
        retention-days: 30

  deploy-preview:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event.inputs.environment == 'preview'
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: warehouse-app
        
    - name: Deploy to GitHub Pages (Preview)
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/classes/static
        destination_dir: preview
        force_orphan: true
        
    - name: Deploy to Vercel (Preview)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod'

  deploy-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: warehouse-app
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/classes/static
        force_orphan: true
        
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod'
        
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v3
      with:
        publish-dir: './target/classes/static'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  notify:
    needs: [deploy-preview, deploy-production]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify on success
      if: success()
      run: |
        echo "‚úÖ Deployment successful!"
        echo "üåê GitHub Pages: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
        echo "üöÄ Vercel: https://${{ github.event.repository.name }}.vercel.app"
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        echo "Check the logs for more details." 